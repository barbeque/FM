NUM_RS232CMENU_OPTIONS	EQU	5

RS232CMENU_ITEMNUM_19200BPS		EQU	1
RS232CMENU_ITEMNUM_38400BPS		EQU	2
RS232CMENU_ITEMNUM_SENDTEST		EQU	3
RS232CMENU_ITEMNUM_RECVCMOS		EQU	4


RS232CMENU				PROC

						MOVZX	SI,CS:[RS232CMENU_BAUD_RATE]
						MOV		AL,CS:[RS232CMENU_BAUD_RATE_TO_AL_TABLE+SI]
						CALL	RS232C2_INIT


RS232CMENU_OUTER_LOOP:
						CALL	MENU_WAIT_PAD_RELEASE
						CALL	CLEAR_FIVE_BELOW

						MOV		BYTE PTR CS:[RS232CMENU_ITEM_BUFFER+MENUITEM_LENGTH*1+1],' '
						MOV		BYTE PTR CS:[RS232CMENU_ITEM_BUFFER+MENUITEM_LENGTH*2+1],' '

						MOV		AL,MENUITEM_LENGTH
						MOV		AH,CS:[RS232CMENU_BAUD_RATE]
						MUL		AH
						MOV		SI,AX
						MOV		BYTE PTR CS:[RS232CMENU_ITEM_BUFFER+MENUITEM_LENGTH+1+SI],'X'

						MOV		SI,OFFSET RS232CMENU_ITEM_BUFFER
						MOV		CX,NUM_RS232CMENU_OPTIONS
						CALL	DRAWMENU

						MOV		CL,NUM_RS232CMENU_OPTIONS
						MOV		AL,CS:[RS232CMENU_CURSOR_POS]
						CALL	DRAWARROW

						MOV		AX,0106H
						CALL	LOCATE
						MOV		SI,OFFSET RS232CMENU_RECEIVE_STR
						CALL	PRINT_TALL

						MOV		AX,0114H
						CALL	LOCATE
						MOV		SI,OFFSET RS232CMENU_SETTING_MSG
						CALL	PRINT_TALL

RS232CMENU_WAIT_PAD:
						CALL	RS232C2_GETC
						JB		@f
						MOVZX	DI,BYTE PTR CS:[RS232CMENU_RECEIVE_BUF_PTR]
						AND		DI,1FH
						MOV		CS:[RS232CMENU_RECEIVE_BUF+DI],AL
						INC		BYTE PTR CS:[RS232CMENU_RECEIVE_BUF_PTR]

						MOV		AX,0106H
						CALL	LOCATE
						MOV		SI,OFFSET RS232CMENU_RECEIVE_STR
						CALL	PRINT_TALL

@@:
						CALL	READ_PADA
						CMP		AL,3FH
						JE		RS232CMENU_WAIT_PAD


						MOV		AH,CS:[RS232CMENU_CURSOR_POS]
						MOV		CH,NUM_RS232CMENU_OPTIONS
						CALL	MOVE_ARROW_BY_PAD
						MOV		CS:[RS232CMENU_CURSOR_POS],AH

						AND		AL,30H
						CMP		AL,30H
						JE		RS232CMENU_OUTER_LOOP


						MOV		AL,CS:[RS232CMENU_CURSOR_POS]
						CMP		AL,0
						JE		RS232CMENU_EXIT

						;;;;;;;;;;;;;;;;

						CMP		AL,RS232CMENU_ITEMNUM_SENDTEST
						JGE		@f

						; Select Baud Rate
						SUB		AL,RS232CMENU_ITEMNUM_19200BPS
						AND		AL,1
						MOV		CS:[RS232CMENU_BAUD_RATE],AL
						MOVZX	SI,AL
						MOV		AL,CS:[RS232CMENU_BAUD_RATE_TO_AL_TABLE+SI]
						CALL	RS232C2_INIT
						JMP		RS232CMENU_OUTER_LOOP

						;;;;;;;;;;;;;;;;

@@:
						CMP		AL,RS232CMENU_ITEMNUM_SENDTEST
						JNE		@f

						CALL	RS232CMENU_SEND_TEST
						JMP		RS232CMENU_OUTER_LOOP

@@:
						CMP		AL,RS232CMENU_ITEMNUM_RECVCMOS
						JNE		@f
						CALL	RS232CMENU_RECEIVE_CMOS
						JMP		RS232CMENU_OUTER_LOOP

@@:
						JMP		RS232CMENU_OUTER_LOOP


RS232CMENU_EXIT:
						RET
RS232CMENU				ENDP



RS232CMENU_SEND_TEST	PROC
						PUSH	CS
						POP		DS

						MOV		AL,1
						MOV		DX,0480H
						OUT		DX,AL

						PUSH	ES
						MOV		AX,0D800H
						MOV		ES,AX
						MOV		SI,OFFSET RS232CMENU_SEND_TEST_TEXT
						XOR		DI,DI
						MOV		CX,2000H
						REP		MOVSB
						POP		ES

						; Just in case
						MOV		SI,OFFSET RS232CMENU_SEND_TEST_TEXT
@@:
						LODSB
						CMP		AL,0
						JE		@f
						CALL	RS232C2_PUTC
						JMP		@b
@@:
						RET
RS232CMENU_SEND_TEST	ENDP

RS232CMENU_SEND_TEST_TEXT	DB	"HELLO FROM FM TOWNS RESCUE BOOT LOADER!",0DH,0AH,"BY CAPTAINYS",0DH,0AH,0


	                           ; 01234567890123456789012345678901234567890123456789012345678901234567890123456789
RS232CMENU_ITEM_BUFFER	DB		"RETURN TO MAIN MENU                                                            ",0
						DB		"[X] 19200bps                                                                   ",0
						DB		"[ ] 38400bps                                                                   ",0
						DB		"SEND TEST STRING                                                               ",0
						DB		"RECEIVE CMOS                                                                   ",0

RS232CMENU_CURSOR_POS	DB		0
RS232CMENU_BAUD_RATE	DB		0
RS232CMENU_BAUD_RATE_TO_AL_TABLE	DB	4,2

RS232CMENU_RECEIVE_STR		DB		"RECEIVED:"
RS232CMENU_RECEIVE_BUF      DB		32 dup(0),0
RS232CMENU_RECEIVE_BUF_PTR  DB		0

RS232CMENU_SETTING_MSG	DB		"8bit, No Parity, 1 stop bit",0



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



RS232CMENU_RECEIVE_CMOS	PROC
						CALL	CLEAR_FIVE_BELOW
						CALL	MENU_WAIT_PAD_RELEASE

						MOV		AX,0106H
						CALL	LOCATE
						MOV		SI,OFFSET RS232C_START_XMODEM__MSG
						CALL	PRINT_TALL

@@:
						CALL	READ_PADA
						CMP		AL,3FH
						JE		@b

						CALL	MENU_WAIT_PAD_RELEASE

						CALL	XMODEM_RECEIVE_INIT

						; Receive Buffer
						MOV		DI,OFFSET UNCHARTED_TERRITORY

RS232CMENU_RECEIVE_CMOS_LOOP:
						CALL	XMODEM_RECEIVE_ONE_STEP
						JAE		RS232CMENU_RECEIVE_CMOS_NO_RECV

						CMP		DI,OFFSET UNCHARTED_TERRITORY+8192 ; Receiving more than 8K?
						JA		RS232CMENU_RECEIVE_CMOS_LOOP

						ADD		DI,128
						MOVZX	EAX,DI
						SUB		EAX,OFFSET UNCHARTED_TERRITORY

						PUSH	DI
						ROL		EAX,8
						PUSH	EAX
						CALL	ITOX8
						XCHG	AL,AH
						MOV		WORD PTR [RS232C_SIZE_MSG_BUF],AX
						POP		EAX
						ROL		EAX,8
						CALL	ITOX8
						XCHG	AL,AH
						MOV		WORD PTR [RS232C_SIZE_MSG_BUF+2],AX
						ROL		EAX,8
						CALL	ITOX8
						XCHG	AL,AH
						MOV		WORD PTR [RS232C_SIZE_MSG_BUF+4],AX
						ROL		EAX,8
						CALL	ITOX8
						XCHG	AL,AH
						MOV		WORD PTR [RS232C_SIZE_MSG_BUF+6],AX

						MOV		AX,0107H
						CALL	LOCATE
						MOV		SI,OFFSET RS232C_SIZE_MSG_BUF
						CALL	PRINT_TALL
						POP		DI

						JMP		RS232CMENU_RECEIVE_CMOS_LOOP

RS232CMENU_RECEIVE_CMOS_NO_RECV:
						CMP		AL,0FFH
						JNE		RS232CMENU_RECEIVE_CMOS_LOOP

						SUB		DI,OFFSET UNCHARTED_TERRITORY
						CMP		DI,8192
						JNE		RS232CMENU_RECEIVE_CMOS_WRONG_SIZE

						MOV		SI,OFFSET RS232C_CMOSLOAD_CONFIRM_1
						CALL	MENU_TRIPLE_CONFIRM
						AND		AH,AH
						JE		@f
						RET

@@:
		CALL	TSUGARU_DEBUG_BREAK

						MOV		SI,OFFSET UNCHARTED_TERRITORY
						MOV		DX,3000H
@@:
						LODSB
						OUT		DX,AL
						ADD		DX,2
						CMP		DX,4000H
						JNE		@b

						CALL	CLEAR_FIVE_BELOW
						MOV		AX,0107H
						MOV		SI,OFFSET RS232C_NEED_RESET_MESSAGE
						CALL	DRAW_TEXT

@@:
						JMP		@b

						RET



RS232CMENU_RECEIVE_CMOS_WRONG_SIZE:
						CALL	MENU_WAIT_PAD_RELEASE
						CALL	CLEAR_FIVE_BELOW

						MOV		AX,0107H
						CALL	LOCATE
						MOV		SI,OFFSET RS232C_WRONG_CMOSSIZE_MSG
						CALL	PRINT_TALL

@@:
						CALL	READ_PADA
						CMP		AL,3FH
						JE		@b

						RET


RS232CMENU_RECEIVE_CMOS	ENDP

RS232C_START_XMODEM__MSG	DB "START XMODEM-SEND IN THE TERMINAL AND PUSH PAD0 BUTTON",0
RS232C_SIZE_MSG_BUF			DB "00000000",0

RS232C_WRONG_CMOSSIZE_MSG	DB "WRONG SIZE.  CMOS IMAGE IS SUPPOSED TO BE 8KB (8192 bytes)",0


RS232C_CMOSLOAD_CONFIRM_1	DB	"CONFIRM WRITE TO CMOS RAM                                                      ",0
							DB	"DON'T WRITE TO CMOS RAM                                                        ",0
RS232C_CMOSLOAD_CONFIRM_2	DB	"REALLY WRITE TO CMOS RAM                                                       ",0
							DB	"DON'T WRITE TO CMOS RAM                                                        ",0
RS232C_CMOSLOAD_CONFIRM_3	DB	"ABSOLUTELY RESET CMOS RAM                                                      ",0
							DB	"DON'T WRITE TO CMOS                                                            ",0


RS232C_NEED_RESET_MESSAGE	DB	"CMOS OVERWRITTEN BY THE BINARY RECEIVED VIA RS232C.",0
							DB	"TO BE SAFE, SYSROM SHOULD CHECK THE VALIDITY OF THE",0
							DB	"CMOS RAM, WHICH WILL BE DONE DURING THE INITIAL BOOT",0
							DB	"PROCESS.",0
							DB	0
							DB	"PLEASE USE THE RESET BUTTON TO RESTART TOWNS.",0
							DB	0FFH,0FFH


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
