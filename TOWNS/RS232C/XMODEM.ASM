XMODEM_RECVSTA_INIT		EQU		0
XMODEM_RECVSTA_WAITSOH	EQU		1
XMODEM_RECVSTA_WAITIDX1	EQU		2
XMODEM_RECVSTA_WAITIDX2	EQU		3
XMODEM_RECVSTA_DATA		EQU		4
XMODEM_RECVSTA_CRC		EQU		5
XMODEM_RECVSTA_EOT		EQU		6

XMODEM_SOH				EQU		01H
XMODEM_EOT				EQU		04H
XMODEM_ACK				EQU		06H
XMODEM_NAK				EQU		15H
XMODEM_ETB				EQU		17H
XMODEM_CAN				EQU		18H
XMODEM_C				EQU		43H



XMODEM_STATE			DB		0
XMODEM_INDEX1			DB		0
XMODEM_INDEX2			DB		0

; XMODEM_CHECKSUM must be immediately after XMODEM_DATA_COUNT
; because it is cleared by MOV WORD PTR CS:[XMODEM_DATA_COUNT],0
XMODEM_DATA_COUNT		DB		0
XMODEM_CHECKSUM			DB		0

XMODEM_TRANSFERRED		DD		0



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



XMODEM_RECEIVE_INIT		PROC
						MOV		BYTE PTR CS:[XMODEM_STATE],XMODEM_RECVSTA_INIT
						RET
XMODEM_RECEIVE_INIT		ENDP



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Input
;   DS:DI  256-byte Data Buffer
; Output
;   AL=0   In session   AL=FFH  Transmission Ended
;   CF=1   256-byte Data Buffer is filled
;   CF=0   Data buffer was not filled

XMODEM_RECEIVE_ONE_STEP	PROC
						PUSH	DI

						MOVZX	BX,BYTE PTR CS:[XMODEM_STATE]
						SHL		BX,1
						ADD		BX,OFFSET XMODEM_RECV_JUMP_TABLE
						JMP		CS:[BX]
						; Why JMP CS:[BX+XMODEM_RECV_JUMP_TABLE] gives me a phase error?

XMODEM_RECV_JUMP_TABLE:
						DW	OFFSET XMODEM_RECV_INIT
						DW	OFFSET XMODEM_RECV_WAITSOH
						DW	OFFSET XMODEM_RECV_WAITIDX1
						DW	OFFSET XMODEM_RECV_WAITIDX2
						DW	OFFSET XMODEM_RECV_DATA
						DW	OFFSET XMODEM_RECV_CHECKSUM
						DW	OFFSET XMODEM_RECV_EOT


XMODEM_RECV_INIT:
						MOV		AL,XMODEM_NAK	 ;  XMODEM_C for CRC mode
						CALL	RS232C2_PUTC
						JMP		XMODEM_RECV_NEXT_STEP_EXIT

XMODEM_RECV_WAITSOH:
						CALL	RS232C2_GETC
						JB		XMODEM_RECV_EXIT
						CMP		AL,XMODEM_SOH
						JE		XMODEM_RECV_NEXT_STEP_EXIT
						CMP		AL,XMODEM_EOT
						JNE		XMODEM_RECV_NAK_EXIT

						; End of Transmission
						MOV		CS:[XMODEM_STATE],XMODEM_RECVSTA_EOT
						JMP		XMODEM_RECV_ACK_EXIT

XMODEM_RECV_WAITIDX1:
						CALL	RS232C2_GETC
						JB		XMODEM_RECV_EXIT
						MOV		CS:[XMODEM_INDEX1],AL
						JMP		XMODEM_RECV_NEXT_STEP_EXIT

XMODEM_RECV_WAITIDX2:
						CALL	RS232C2_GETC
						JB		XMODEM_RECV_EXIT
						MOV		CS:[XMODEM_INDEX2],AL
						MOV		WORD PTR CS:[XMODEM_DATA_COUNT],0 ; Clears count and checksum
						; Supposed to be COM of INDEX1.  Maybe I should check for error here.
						JMP		XMODEM_RECV_NEXT_STEP_EXIT

XMODEM_RECV_DATA:
						CALL	RS232C2_GETC
						JB		XMODEM_RECV_EXIT
						MOVZX	BX,CS:[XMODEM_DATA_COUNT]
						MOV		[BX+DI],AL
						ADD		CS:[XMODEM_CHECKSUM],AL
						INC		BYTE PTR CS:[XMODEM_DATA_COUNT]
						JB		XMODEM_RECV_NEXT_STEP_EXIT
						JMP		XMODEM_RECV_EXIT

XMODEM_RECV_CHECKSUM:
						CALL	RS232C2_GETC
						JB		XMODEM_RECV_EXIT
						CMP		AL,CS:[XMODEM_CHECKSUM]
						JE		XMODEM_RECV_NAK_EXIT
						MOV		CS:[XMODEM_STATE],XMODEM_RECVSTA_WAITSOH
						JMP		XMODEM_RECV_BLOCKEND_EXIT



XMODEM_RECV_EOT:
						CALL	RS232C2_GETC
						JB		XMODEM_RECV_EXIT
						CMP		AL,XMODEM_ETB
						JNE		XMODEM_RECV_EXIT
						MOV		AL,XMODEM_ACK
						CALL	RS232C2_PUTC

						; Transmission Ended
						POP		DI
						MOV		AL,0FFH
						CLC
						RET

XMODEM_RECV_EXIT:
						POP		DI
						XOR		AL,AL
						CLC
						RET

XMODEM_RECV_NEXT_STEP_EXIT:
						INC		CS:[XMODEM_STATE]
						POP		DI
						XOR		AL,AL
						CLC
						RET

XMODEM_RECV_NAK_EXIT:
						MOV		AL,XMODEM_NAK
						CALL	RS232C2_PUTC
						POP		DI
						XOR		AL,AL
						CLC
						RET

XMODEM_RECV_ACK_EXIT:
						MOV		AL,XMODEM_ACK
						CALL	RS232C2_PUTC
						POP		DI
						XOR		AL,AL
						CLC
						RET

XMODEM_RECV_BLOCKEND_EXIT:
						MOV		AL,XMODEM_NAK
						CALL	RS232C2_PUTC
						POP		DI
						XOR		AL,AL
						STC
						RET

XMODEM_RECEIVE_ONE_STEP	ENDP

