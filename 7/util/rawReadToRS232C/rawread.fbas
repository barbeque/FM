##SYMFILE	RAWREADM.sym

CLEAR 240,&H23FF
DEFINT A-Z

LOADM "RAWREADM"
WIDTH 80,25


EXEC &&RS232C_OPEN&&
EXEC &&RS232C_CLOSE&&


$$DRIVE_SEL
COLOR 4
PRINT "DISK TO RS232C by CaptainYS"
COLOR 7
	LINE INPUT "DRIVE (C for 0 then 1)? ",D$
	IF D$="C" THEN DRVNUM=0:GOTO $$DENS_SEL
	IF D$<>"0" AND D$<>"1" THEN GOTO $$DRIVE_SEL
	DRVNUM=VAL(D$)

$$DENS_SEL
	LINE INPUT "0:2D  1:2DD (Default 2D)",I$
	IF I$="" OR I$="0" THEN DF=&H40:LT=39:GOTO $$DENS_SEL_END
	IF I$="1" THEN DF=0:LT=79:GOTO $$DENS_SEL_END
	GOTO $DENS_SEL
$$DENS_SEL_END

POKE &HFD1E,DF+&H1F:POKE &HFD1E,DF+&H1A
POKE &HFD1E,DF+&H15:POKE &HFD1E,DF+&H10

LINE INPUT "DISK TITLE? ",TITLE$
IF D$="C" THEN LINE INPUT "DISK TITLE (DRV 1)? ",TITLE1$


$$TIMES_READ_SEL
LINE INPUT "TIMES READING (Default=1)? ",I$
REPCTR=VAL(I$)
IF I$="" THEN REPCTR=1:GOTO $$TIMES_READ_SELECTED
IF REPCTR<1 OR 4<REPCTR THEN PRINT "MUST BE BETWEEN 1 AND 4":GOTO $$TIMES_READ_SEL

$$TIMES_READ_SELECTED


$$BEGIN_TRACK_SEL
LINE INPUT "START TRACK (Default=0)? ",I$
TRKBGN=VAL(I$)
IF I$="" THEN TRKBGN=0
IF TRKBGN<0 OR 41<TRKBGN THEN PRINT "MUST BE 0 TO 41":GOTO $$BEGIN_TRACK_SEL

$$END_TRACK_SEL
PRINT "END TRACK (Default=";LT;")";:LINE INPUT I$
TRKEND=VAL(I$)
IF I$="" THEN TRKEND=LT
IF TRKEND<0 OR LT+2<TRKEND THEN PRINT "MUST BE 0 TO ";LT+2:GOTO $$END_TRACK_SEL

$$TRANSMIT_SEL
LINE INPUT "TRANSMIT? (Default=Y)? ",I$
IF I$="" OR I$="Y" OR I$="y" THEN TRANS=1:T$="TRANSMIT ":GOTO $$TRANSMIT_SELECTED
TRANS=0:T$=""
IF I$<>"N" AND I$<>"n" THEN PRINT "ENTER Y or N":GOTO $$TRANSMIT_SEL
$$TRANSMIT_SELECTED

WHILE INKEY$<>"":WEND

PRINT "INSERT DISK IN DRIVE ";DRV$;" AND PRESS KEY"
I$=INPUT$(1)


$$DRIVE_LOOP
POKE &&DRIVE&&,DRVNUM
EXEC &&RESTORE_DISK&&

FMTADR=0
FMTSIZ=0
CHKSUM=0
BUFADR=0
BUFSIZ=0

M$="++++BEGIN_DISK"
IF TITLE$<>"" THEN M$=M$+" NAME:"+TITLE$
IF DF=0 THEN M$=M$+" 2DD"
GOSUB $$SENDSTRING

FOR TRK=TRKBGN*2 TO (TRKEND+1)*2-1
	M$="++++TRACK:"+STR$((TRK AND 254)/2)+" SIDE:"+STR$(TRK AND 1)
	PRINT M$;" ";
	GOSUB $$SENDSTRING

	POKE &&DRIVE&&,DRVNUM
	POKE &&TRACK&&,(TRK AND 254)/2
	POKE &&SIDE&&,(TRK AND 1)
	EXEC &&SEEKTRACK&&
	FOR REPEAT=1 TO REPCTR
		PRINT "ADDRMARK ";
		EXEC &&READ_ADDRMARK&&
		PRINT T$
		M$="++++ADDRMARK":GOSUB $$SENDSTRING
		POKE VARPTR(BUFADR),PEEK(&&ADDRMARKADDR&&)
		POKE VARPTR(BUFADR)+1,PEEK(&&1:ADDRMARKADDR&&)
		POKE VARPTR(BUFSIZ),PEEK(&&ADDRMARKUSED&&)
		POKE VARPTR(BUFSIZ)+1,PEEK(&&1:ADDRMARKUSED&&)
		POKE &&RS232C_SEND_ASCIIDUMP_BYTEPERLINE&&,6
		GOSUB $$SENDASCIIDUMP
		POKE &&RS232C_SEND_ASCIIDUMP_BYTEPERLINE&&,16
		M$="++++END_ADDRMARK":GOSUB $$SENDSTRING
	NEXT

	EXEC &&CLEARFORMATINFO&&
	FOR REPEAT=1 TO REPCTR
		PRINT "RAWREAD ";
		EXEC &&READTRACK&&
		IF 0<>PEEK(&&ERRORRETURN&&) THEN PRINT "ERROR IN RAW READ":GOTO $$NEXTREPEAT
		EXEC &&ANALYZETRACK&&

		POKE VARPTR(BUFADR),PEEK(&&BUFFADDR&&)
		POKE VARPTR(BUFADR)+1,PEEK(&&1:BUFFADDR&&)
		POKE VARPTR(BUFSIZ),PEEK(&&READSIZE&&)
		POKE VARPTR(BUFSIZ)+1,PEEK(&&1:READSIZE&&)
		POKE VARPTR(CHKSUM),PEEK(&&RAWREADCHECKSUM&&)
		POKE VARPTR(CHKSUM)+1,PEEK(&&1:RAWREADCHECKSUM&&)

		PRINT T$;

		M$="++++RAWREAD":GOSUB $$SENDSTRING

		M$="SIZE:$"+HEX$(BUFSIZ)
		PRINT M$+" ";
		GOSUB $$SENDSTRING
		M$="CHECKSUM:$"+HEX$(CHKSUM)
		PRINT M$+" ";
		GOSUB $$SENDSTRING
		M$="XOR:$"+HEX$(PEEK(&&RAWREADXOR&&))
		PRINT M$
		GOSUB $$SENDSTRING

		GOSUB $$SENDASCIIDUMP

		M$="++++END_RAWREAD":GOSUB $$SENDSTRING
$$NEXTREPEAT
	NEXT


	POKE VARPTR(FMTADR),PEEK(&&SECTORINFOADDR&&)
	POKE VARPTR(FMTADR)+1,PEEK(&&SECTORINFOADDR&&+1)
	POKE VARPTR(FMTSIZ),PEEK(&&FORMATINFOSIZE&&)
	POKE VARPTR(FMTSIZ)+1,PEEK(&&FORMATINFOSIZE&&+1)


	FOR REPEAT=1 TO REPCTR
		PRINT "SECTORS ";
		EXEC &&DUMPSECTOR&&

		POKE VARPTR(BUFADR),PEEK(&&SECTORDUMPADDR&&)
		POKE VARPTR(BUFADR)+1,PEEK(&&1:SECTORDUMPADDR&&)
		POKE VARPTR(BUFSIZ),PEEK(&&DUMPSIZE&&)
		POKE VARPTR(BUFSIZ)+1,PEEK(&&1:DUMPSIZE&&)

		POKE VARPTR(CHKSUM),PEEK(&&DUMPCHECKSUM&&)
		POKE VARPTR(CHKSUM)+1,PEEK(&&1:DUMPCHECKSUM&&)

		PRINT T$;
		M$="++++SECTORDUMP":GOSUB $$SENDSTRING

		M$="VER:3":GOSUB $$SENDSTRING

		M$="SIZE:$"+HEX$(BUFSIZ)
		PRINT M$+" ";
		GOSUB $$SENDSTRING
		M$="CHECKSUM:$"+HEX$(CHKSUM)
		PRINT M$+" ";
		GOSUB $$SENDSTRING
		M$="XOR:$"+HEX$(PEEK(&&DUMPXOR&&))
		PRINT M$
		GOSUB $$SENDSTRING

		BUFADR=BUFADR
		BUFSIZ=BUFSIZ
		GOSUB $$SENDASCIIDUMP
		M$="++++END_SECTORDUMP":GOSUB $$SENDSTRING

		M$="++++SECTORINFO":GOSUB $$SENDSTRING

		M$="SIZE:$"+HEX$(FMTSIZ):GOSUB $$SENDSTRING

		BUFADR=FMTADR
		BUFSIZ=FMTSIZ
		POKE &&RS232C_SEND_ASCIIDUMP_BYTEPERLINE&&,5
		GOSUB $$SENDASCIIDUMP
		POKE &&RS232C_SEND_ASCIIDUMP_BYTEPERLINE&&,16

		M$="++++END_SECTORINFO":GOSUB $$SENDSTRING
	NEXT


	C=0
	I=FMTADR
$$SECTOR_LOOP
		IF 255=PEEK(I+3) THEN GOTO $$BREAK_SECTOR_LOOP
		COLOR 7
		IF 0<>PEEK(I+4) THEN COLOR 2
		PRINT RIGHT$("0"+HEX$(PEEK(I)),2);RIGHT$("0"+HEX$(PEEK(I+1)),2);
		PRINT RIGHT$("0"+HEX$(PEEK(I+2)),2);RIGHT$("0"+HEX$(PEEK(I+3)),2);
		PRINT RIGHT$("0"+HEX$(PEEK(I+4)),2);"|";
		COLOR 7
		C=C+1
		IF (C MOD 6)=0 THEN PRINT
		I=I+5
		GOTO $$SECTOR_LOOP
$$BREAK_SECTOR_LOOP
	IF (C MOD 6)<>0 THEN PRINT


	M$="LAST_IRQ:$"+HEX$(PEEK(&&LASTIRQDRQ&&)):GOSUB $$SENDSTRING
	M$="LAST_ERR:$"+HEX$(PEEK(&&ERRORRETURN&&)):GOSUB $$SENDSTRING
	M$="++++END_TRACK":GOSUB $$SENDSTRING

	IF 0=TRANS THEN PRINT "Press Key":I$=INPUT$(1)
NEXT

M$="++++END_DISK"
IF TITLE$<>"" THEN M$=M$+" NAME:"+TITLE$
PRINT M$
GOSUB $$SENDSTRING

IF D$="C" AND DRVNUM=0 THEN DRVNUM=1:TITLE$=TITLE1$:GOTO $$DRIVE_LOOP

GOTO $$DRIVE_SEL



$$SENDASCIIDUMP
IF 0=TRANS THEN RETURN
EXEC &&RS232C_OPEN&&
POKE &&RS232C_SEND_BUFFER_BEGIN&&,PEEK(VARPTR(BUFADR))
POKE &&1:RS232C_SEND_BUFFER_BEGIN&&,PEEK(VARPTR(BUFADR)+1)
POKE &&RS232C_SEND_BUFFER_SIZE&&,PEEK(VARPTR(BUFSIZ))
POKE &&1:RS232C_SEND_BUFFER_SIZE&&,PEEK(VARPTR(BUFSIZ)+1)
EXEC &&RS232C_SEND_ASCII&&
EXEC &&RS232C_CLOSE&&
RETURN



$$SENDSTRING
IF 0=TRANS THEN RETURN
EXEC &&RS232C_OPEN&&
FOR I=1 TO LEN(M$)
POKE &H6F00+I-1,ASC(MID$(M$,I,1))
NEXT
POKE &&RS232C_SEND_BUFFER_BEGIN&&,&H6F
POKE &&1:RS232C_SEND_BUFFER_BEGIN&&,0
POKE &&RS232C_SEND_BUFFER_SIZE&&,0
POKE &&1:RS232C_SEND_BUFFER_SIZE&&,LEN(M$)
EXEC &&RS232C_SEND_BINARY&&
EXEC &&RS232C_SEND_CRLF&&
EXEC &&RS232C_CLOSE&&
RETURN
