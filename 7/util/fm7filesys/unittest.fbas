##SYMFILE DIRTESTM.sym
##SYMFILE MEMCMP.sym
WIDTH 80,25

CLEAR ,&H1800
DEFINT A-Z

DIM AD(12)
AD(0)=3
AD(1)=2
AD(2)=3
AD(3)=107
AD(4)=117
AD(5)=3
AD(6)=3
AD(7)=3
AD(8)=5
AD(9)=2
AD(10)=3
AD(11)=2
AD(12)=3

OFS=&H300
DRV=0
LOADM "DIRTESTM",OFS
LOADM "MEMCMP"

PRINT "MAKING TEST DATA"
FOR I=&H2000 TO &H47FF
POKE I,RND*255
NEXT


$$DRIVE_LOOP
FOR I=&H4800 TO &H6FFF
POKE I,0
NEXT


CLS
POKE OFS+&&FSYS_BAS_DRIVE&&,DRV

EXEC OFS+&&FSYS_FBASICIO_LOAD_FAT&&

FATPTR=0
POKE VARPTR(FATPTR),  PEEK(OFS+&&FSYS_BAS_DATAPTR&&)
POKE VARPTR(FATPTR)+1,PEEK(OFS+&&1:FSYS_BAS_DATAPTR&&)
FOR I=0 TO 151
    PRINT RIGHT$("0"+HEX$(PEEK(FATPTR+I)),2)+" ";
NEXT
PRINT


F$="2019data":GOSUB $$KILL
F$="2PIANON":GOSUB $$KILL
F$="2PIANO33":GOSUB $$KILL
F$="TESTHG":GOSUB $$KILL


CT=0
ST=&H2000
SZ=5
NM=0


$$MAIN_LOOP
LOCATE 0,10
PRINT "DRV:";DRV;" SIZE:$";HEX$(SZ);" NUM:";NM;" OFS:$";HEX$(OFS)


F$=CHR$(ASC("A")+NM)
GOSUB $$SET_FILE_NAME

EXEC OFS+&&FSYS_FBASICIO_KILL&&

EXEC OFS+&&FSYS_FBASICIO_KILL&&
E=PEEK(OFS+&&FSYS_BAS_ERRORRETURN&&)
PRINT "1ERR:";E;"(Must be 63)"
IF 63<>E THEN PRINT "ERROR!":ERROR E

POKE OFS+&&FSYS_LOADM_OFFSET&&,&H20
POKE OFS+&&1:FSYS_LOADM_OFFSET&&,&H00
EXEC OFS+&&FSYS_FBASICIO_LOADM&&
E=PEEK(OFS+&&FSYS_BAS_ERRORRETURN&&)
PRINT "2ERR:";E;"(Must be 63)"
IF 63<>E THEN PRINT "ERROR!":ERROR E

EX=&H2000+SZ

POKE OFS+&&FSYS_BAS_SIZE&&,PEEK(VARPTR(SZ))
POKE OFS+&&1:FSYS_BAS_SIZE&&,PEEK(VARPTR(SZ)+1)

POKE OFS+&&FSYS_BAS_DATAPTR&&,PEEK(VARPTR(ST))
POKE OFS+&&1:FSYS_BAS_DATAPTR&&,PEEK(VARPTR(ST)+1)

POKE OFS+&&FSYS_BAS_EXECPTR&&,PEEK(VARPTR(EX))
POKE OFS+&&1:FSYS_BAS_EXECPTR&&,PEEK(VARPTR(EX)+1)

F$=CHR$(ASC("A")+NM)
GOSUB $$SET_FILE_NAME

EXEC OFS+&&FSYS_FBASICIO_SAVEM&&
E=PEEK(OFS+&&FSYS_BAS_ERRORRETURN&&)
PRINT "3ERR:";E
IF 0<>E THEN PRINT "ERROR!":ERROR E

EXEC OFS+&&FSYS_FBASICIO_SAVEM&&
E=PEEK(OFS+&&FSYS_BAS_ERRORRETURN&&)
PRINT "4ERR:";E;"(Must be 64)"
IF 64<>E THEN PRINT "MUST SEE 64 (FILE ALREADY EXISTS)!";E:ERROR E



POKE OFS+&&FSYS_LOADM_OFFSET&&,&H28
POKE OFS+&&1:FSYS_LOADM_OFFSET&&,&H00
EXEC OFS+&&FSYS_FBASICIO_LOADM&&
E=PEEK(OFS+&&FSYS_BAS_ERRORRETURN&&)
PRINT "5ERR:";E
IF 0<>E THEN PRINT "ERROR!":ERROR E

POKE &&CMPADDR1&&,&H20
POKE &&1:CMPADDR1&&,&H00
POKE &&CMPADDR2&&,&H48
POKE &&1:CMPADDR2&&,&H00
POKE &&CMPSIZE&&,PEEK(VARPTR(SZ))
POKE &&1:CMPSIZE&&,PEEK(VARPTR(SZ)+1)
EXEC &&COMPARE&&
POKE VARPTR(E)  ,PEEK(&&CMPADDR1&&)
POKE VARPTR(E)+1,PEEK(&&1:CMPADDR1&&)
IF 0<>E THEN PRINT "Error at $";HEX$(E):END


POKE VARPTR(EX)  ,PEEK(&&FSYS_BAS_EXECPTR&&)
POKE VARPTR(EX)+1,PEEK(&&1:FSYS_BAS_EXECPTR&&)
IF EX!=&H3800+SZ THEN PRINT "EXEC ADDR ERROR!":END

SZ=SZ+AD(CT)
CT=CT+1:IF 12<CT THEN CT=0
NM=(NM+1) AND 3
IF SZ<&H2800 THEN GOTO $$MAIN_LOOP
IF DRV=0 THEN DRV=1:GOTO $$DRIVE_LOOP




PRINT "SUCCESSFUL!"
END



$$SET_FILE_NAME
F$=LEFT$(F$+"        ",8)
FOR I=0 TO LEN(F$)-1
	POKE OFS+&&FSYS_DIR_BAS_FILENAME&&+I,ASC(MID$(F$,I+1,1))
NEXT
RETURN


$$KILL
GOSUB $$SET_FILE_NAME
EXEC OFS+&&FSYS_FBASICIO_KILL&&
RETURN
